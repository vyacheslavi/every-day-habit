version: "3.8"

services:

  db:
    container_name: db_container
    image: postgres:14.1-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

  db_test:
    container_name: db_test_container
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres_test
      - POSTGRES_PASSWORD=postgres_test
      - POSTGRES_DB=postgres_test
    ports:
      - "5433:5432"

  alembic_migrations:
    container_name: alembic_container
    build:
      context: .
    command:
      ['alembic', 'upgrade', 'head']
    depends_on:
      db:
        condition: service_healthy
        restart: true


  redis:
    container_name: redis_container
    image: redis:7.2.4-alpine3.19
    ports:
      - '6380:6379'
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 10s
      timeout: 5s
      retries: 5


  celery_worker:
    container_name: celery_worker
    build:
      context: .
    command:
      ['celery', '-A', 'backend.celery_task:celery_app', 'worker', '--loglevel=info']
    volumes:
      - .:/usr/src/app/
    depends_on:
      - redis

  flower:
    container_name: flower
    build:
      context: .
    command:
      ['celery', '-A', 'backend.celery_task:celery_app', 'flower', '--port=5555']
    ports:
      - 5556:5555
    depends_on:
      - redis
      - celery_worker


volumes:
  db-data:
